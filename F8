#include <iostream>
#include <vector>

using namespace std;

const int INF = (int)10e6;

int main() {

	int n;
	int m; 
	
	cin >> n >> m;

	if (m==0)
	{
		cout << "0";
		return 0;
	}

	int s;
	int e;

	cin >> s >> e;

	s--;
	e--;
	
	

	vector<double> podvect (n, INF);
	vector<vector<double>> d (n, podvect);
	pair <int, int> tempRoad;
	int chance;

	for (int i = 0; i < m; i++)
	{
		cin >> tempRoad.first >> tempRoad.second >> chance;
		d[tempRoad.first-1][tempRoad.second-1] = (double)chance/100;
		d[tempRoad.second-1][tempRoad.first-1] = (double)chance/100;
	}

	for (int k=0; k<n; ++k)
		for (int i=0; i<n; ++i)
			for (int j=0; j<n; ++j)
				if (d[i][k] < INF && d[k][j] < INF)
					d[i][j] = min (d[i][j], 1 - (1 - d[i][k]) * (1 - d[k][j]));



	cout << d[e][s];

}
