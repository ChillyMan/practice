#include <iostream>
#include <vector>

using namespace std;
 
const long long INF = (int)10e9;

int main() {
	int n;
	int s; 
	int f; 
	do {
		cin >> n >> s >> f;
	} while (n<1||n>100||s<1||f<1||s>n||f>n);

	if (s == f) 
	{
		cout << "0" << endl;
		return 0;
	}

	s--;
	f--;
	vector < vector < pair<int,long long> > > g;
	vector < pair <int,long long> > tmp;
	pair <int, long long> temp;
	for (int i = 0; i < n; i++)
	{
		tmp.clear();
		for (int j = 0; j < n; j++)
		{
			temp.first = j;
			cin >> temp.second;
			tmp.push_back(temp);
		}
		g.push_back(tmp);

    }
 
	vector<long long> d (n, INF),  p (n);
	d[s] = 0;

	vector<bool> used (n, false);

	for (int i=0; i<n; ++i) {
		int v = -1;
		for (int j=0; j<n; ++j)
			if (!used[j] && (v == -1 || d[j] < d[v]))
				v = j;
		if (d[v] == INF)
			break;
		used[v] = true;
 
		for (size_t j=0; j < g[v].size(); ++j) 
		{
			if (g[v][j].second == -1) continue;
			
			int to = g[v][j].first;
			long long len = g[v][j].second;
			if (d[v] + len < d[to]) {
				d[to] = d[v] + len;
				p[to] = v;
			}
		}
	}


	if (d[f] < INF) 
		cout << d[f] << endl;
	else 
		cout << "-1" << endl;
    
}
